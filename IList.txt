<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_112) on Thu Oct 15 15:49:41 CDT 2020 -->
<title>IList</title>
<meta name="date" content="2020-10-15">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
<script type="text/javascript" src="script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="IList";
        }
    }
    catch(err) {
    }
//-->
var methods = {"i0":6,"i1":6,"i2":6,"i3":6,"i4":6,"i5":6,"i6":6,"i7":6,"i8":6,"i9":6,"i10":6,"i11":6,"i12":6,"i13":6,"i14":6};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],4:["t3","Abstract Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Interface IList" class="title">Interface IList&lt;E&gt;</h2>
</div>
<div class="contentContainer">
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Superinterfaces:</dt>
<dd><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</a>&lt;E&gt;</dd>
</dl>
<dl>
<dt>All Known Implementing Classes:</dt>
<dd><a href="LinkedList.html" title="class in &lt;Unnamed&gt;">LinkedList</a></dd>
</dl>
<hr>
<br>
<pre>public interface <span class="typeNameLabel">IList&lt;E&gt;</span>
extends <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</a>&lt;E&gt;</pre>
<div class="block">Interface for a simple List. 
 Random access to all items in the list is provided. 
 The numbering of elements in the list begins at 0.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t3" class="tableTab"><span><a href="javascript:show(4);">Abstract Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#add-E-">add</a></span>(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</code>
<div class="block">Add an item to the end of this list.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#equals-java.lang.Object-">equals</a></span>(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;other)</code>
<div class="block">Determine if this IList is equal to other.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="IList.html" title="type parameter in IList">E</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#get-int-">get</a></span>(int&nbsp;pos)</code>
<div class="block">Get an element from the list.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code><a href="IList.html" title="interface in &lt;Unnamed&gt;">IList</a>&lt;<a href="IList.html" title="type parameter in IList">E</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#getSubList-int-int-">getSubList</a></span>(int&nbsp;start,
          int&nbsp;stop)</code>
<div class="block">Return a sublist of elements in this list 
 from <tt>start</tt> inclusive to <tt>stop</tt> exclusive.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#indexOf-E-">indexOf</a></span>(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</code>
<div class="block">Find the position of an element in the list.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#indexOf-E-int-">indexOf</a></span>(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item,
       int&nbsp;pos)</code>
<div class="block">find the position of an element in the list starting 
 at a specified position.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#insert-int-E-">insert</a></span>(int&nbsp;pos,
      <a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</code>
<div class="block">Insert an item at a specified position in the list.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</a>&lt;<a href="IList.html" title="type parameter in IList">E</a>&gt;</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#iterator--">iterator</a></span>()</code>
<div class="block">return an Iterator for this list.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#makeEmpty--">makeEmpty</a></span>()</code>
<div class="block">return the list to an empty state.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#remove-E-">remove</a></span>(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;obj)</code>
<div class="block">Remove the first occurrence of obj in this list.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="IList.html" title="type parameter in IList">E</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#remove-int-">remove</a></span>(int&nbsp;pos)</code>
<div class="block">Remove an element in the list based on position.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#removeRange-int-int-">removeRange</a></span>(int&nbsp;start,
           int&nbsp;stop)</code>
<div class="block">Remove all elements in this list from <tt>start</tt> 
 inclusive to <tt>stop</tt> exclusive.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code><a href="IList.html" title="type parameter in IList">E</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#set-int-E-">set</a></span>(int&nbsp;pos,
   <a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</code>
<div class="block">Change the data at the specified position in the list.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>int</code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#size--">size</a></span>()</code>
<div class="block">Return the size of this list.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a></code></td>
<td class="colLast"><code><span class="memberNameLink"><a href="IList.html#toString--">toString</a></span>()</code>
<div class="block">Return a String version of this list enclosed in
 square brackets, [].</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods.inherited.from.class.java.lang.Iterable">
<!--   -->
</a>
<h3>Methods inherited from interface&nbsp;java.lang.<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</a></h3>
<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true#forEach-java.util.function.Consumer-" title="class or interface in java.lang">forEach</a>, <a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true#spliterator--" title="class or interface in java.lang">spliterator</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="add-java.lang.Object-">
<!--   -->
</a><a name="add-E-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>add</h4>
<pre>void&nbsp;add(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</pre>
<div class="block">Add an item to the end of this list.
 <br>pre: item != null
 <br>post: size() = old size() + 1, get(size() - 1) = item</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>item</code> - the data to be added to the end of this list, 
 item != null</dd>
</dl>
</li>
</ul>
<a name="equals-java.lang.Object-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>equals</h4>
<pre>boolean&nbsp;equals(<a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a>&nbsp;other)</pre>
<div class="block">Determine if this IList is equal to other. Two
 ILists are equal if they contain the same elements
 in the same order.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#equals-java.lang.Object-" title="class or interface in java.lang">equals</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true if this IList is equal to other, false otherwise</dd>
</dl>
</li>
</ul>
<a name="get-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>get</h4>
<pre><a href="IList.html" title="type parameter in IList">E</a>&nbsp;get(int&nbsp;pos)</pre>
<div class="block">Get an element from the list.
 <br>pre: 0 <= pos < size()
 <br>post: return the item at pos</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pos</code> - specifies which element to get</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the element at the specified position in the list</dd>
</dl>
</li>
</ul>
<a name="getSubList-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getSubList</h4>
<pre><a href="IList.html" title="interface in &lt;Unnamed&gt;">IList</a>&lt;<a href="IList.html" title="type parameter in IList">E</a>&gt;&nbsp;getSubList(int&nbsp;start,
                    int&nbsp;stop)</pre>
<div class="block">Return a sublist of elements in this list 
 from <tt>start</tt> inclusive to <tt>stop</tt> exclusive.
 This list is not changed as a result of this call.
 <br>pre: <tt>0 <= start <= size(), start <= stop <= size()</tt>
 <br>post: return a list whose size is stop - start 
 and contains the elements at positions start through stop - 1 
 in this list.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>start</code> - index of the first element of the sublist.</dd>
<dd><code>stop</code> - stop - 1 is the index of the last element 
 of the sublist.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a list with <tt>stop - start</tt> elements, 
 The elements are from positions <tt>start</tt> inclusive to
 <tt>stop</tt> exclusive in this list. 
 If start == stop an empty list is returned.</dd>
</dl>
</li>
</ul>
<a name="indexOf-java.lang.Object-">
<!--   -->
</a><a name="indexOf-E-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>indexOf</h4>
<pre>int&nbsp;indexOf(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</pre>
<div class="block">Find the position of an element in the list.
 <br>pre: item != null
 <br>post: return the index of the first element equal to item
 or -1 if item is not present</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>item</code> - the element to search for in the list. item != null</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>return the index of the first element equal to item 
 or a -1 if item is not present</dd>
</dl>
</li>
</ul>
<a name="indexOf-java.lang.Object-int-">
<!--   -->
</a><a name="indexOf-E-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>indexOf</h4>
<pre>int&nbsp;indexOf(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;item,
            int&nbsp;pos)</pre>
<div class="block">find the position of an element in the list starting 
 at a specified position.
 <br>pre: 0 <= pos < size(), item != null
 <br>post: return the index of the first element equal 
 to item starting at pos
 or -1 if item is not present from position pos onward</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>item</code> - the element to search for in the list. Item != null</dd>
<dd><code>pos</code> - the position in the list to start searching from</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>starting from the specified position 
 return the index of the first element equal to item 
 or a -1 if item is not present between pos 
 and the end of the list</dd>
</dl>
</li>
</ul>
<a name="insert-int-java.lang.Object-">
<!--   -->
</a><a name="insert-int-E-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>insert</h4>
<pre>void&nbsp;insert(int&nbsp;pos,
            <a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</pre>
<div class="block">Insert an item at a specified position in the list.
 <br>pre: 0 <= pos <= size(), item != null
 <br>post: size() = old size() + 1, get(pos) = item, 
 all elements in the list with a positon >= pos have a 
 position = old position + 1</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pos</code> - the position to insert the data at in the list</dd>
<dd><code>item</code> - the data to add to the list, item != null</dd>
</dl>
</li>
</ul>
<a name="iterator--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>iterator</h4>
<pre><a href="https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html?is-external=true" title="class or interface in java.util">Iterator</a>&lt;<a href="IList.html" title="type parameter in IList">E</a>&gt;&nbsp;iterator()</pre>
<div class="block">return an Iterator for this list.
 <br>pre: none
 <br>post: return an Iterator object for this List</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true#iterator--" title="class or interface in java.lang">iterator</a></code>&nbsp;in interface&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Iterable.html?is-external=true" title="class or interface in java.lang">Iterable</a>&lt;<a href="IList.html" title="type parameter in IList">E</a>&gt;</code></dd>
</dl>
</li>
</ul>
<a name="makeEmpty--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>makeEmpty</h4>
<pre>void&nbsp;makeEmpty()</pre>
<div class="block">return the list to an empty state.
 <br>pre: none
 <br>post: size() = 0</div>
</li>
</ul>
<a name="remove-java.lang.Object-">
<!--   -->
</a><a name="remove-E-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>remove</h4>
<pre>boolean&nbsp;remove(<a href="IList.html" title="type parameter in IList">E</a>&nbsp;obj)</pre>
<div class="block">Remove the first occurrence of obj in this list.
 Return <tt>true</tt> if this list changed 
 as a result of this call, <tt>false</tt> otherwise.
 <br>pre: obj != null
 <br>post: if obj is in this list the first occurrence 
 has been removed and size() = old size() - 1. 
 If obj is not present the list is not altered in any way.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>obj</code> - The item to remove from this list. obj != null</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Return <tt>true</tt> if this list changed 
 as a result of this call, <tt>false</tt> otherwise.</dd>
</dl>
</li>
</ul>
<a name="remove-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>remove</h4>
<pre><a href="IList.html" title="type parameter in IList">E</a>&nbsp;remove(int&nbsp;pos)</pre>
<div class="block">Remove an element in the list based on position.
 <br>pre: 0 <= pos < size()
 <br>post: size() = old size() - 1, all elements of
 list with a position > pos have a position = old position - 1</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pos</code> - the position of the element to remove from the list</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the data at position pos</dd>
</dl>
</li>
</ul>
<a name="removeRange-int-int-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>removeRange</h4>
<pre>void&nbsp;removeRange(int&nbsp;start,
                 int&nbsp;stop)</pre>
<div class="block">Remove all elements in this list from <tt>start</tt> 
 inclusive to <tt>stop</tt> exclusive.
 <br>pre: <tt>0 <= start <= size(), start <= stop <= size()</tt>
 <br>post: <tt>size() = old size() - (stop - start)</tt></div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>start</code> - position at beginning of range of elements 
 to be removed</dd>
<dd><code>stop</code> - stop - 1 is the position at the end 
 of the range of elements to be removed</dd>
</dl>
</li>
</ul>
<a name="set-int-java.lang.Object-">
<!--   -->
</a><a name="set-int-E-">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>set</h4>
<pre><a href="IList.html" title="type parameter in IList">E</a>&nbsp;set(int&nbsp;pos,
      <a href="IList.html" title="type parameter in IList">E</a>&nbsp;item)</pre>
<div class="block">Change the data at the specified position in the list.
 the old data at that position is returned.
 <br>pre: 0 <= pos < size(), item != null
 <br>post: get(pos) = item, return the
 old get(pos)</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pos</code> - the position in the list to overwrite</dd>
<dd><code>item</code> - the new item that will overwrite the old item, 
 item != null</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the old data at the specified position</dd>
</dl>
</li>
</ul>
<a name="size--">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>size</h4>
<pre>int&nbsp;size()</pre>
<div class="block">Return the size of this list. 
 In other words the number of elements in this list.
 <br>pre: none
 <br>post: return the number of items in this list</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>the number of items in this list</dd>
</dl>
</li>
</ul>
<a name="toString--">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/String.html?is-external=true" title="class or interface in java.lang">String</a>&nbsp;toString()</pre>
<div class="block">Return a String version of this list enclosed in
 square brackets, []. Elements are in
 are in order based on position in the 
 list with the first element
 first. Adjacent elements are separated by comma's</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true#toString--" title="class or interface in java.lang">toString</a></code>&nbsp;in class&nbsp;<code><a href="https://docs.oracle.com/javase/8/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>a String representation of this IList</dd>
</dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
</body>
</html>
