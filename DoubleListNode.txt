<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (version 1.7.0) on Mon Oct 03 15:20:42 CDT 2011 -->
<title>DoubleListNode</title>
<meta name="date" content="2011-10-03">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
</head>
<body>
<script type="text/javascript"><!--
    if (location.href.indexOf('is-external=true') == -1) {
        parent.document.title="DoubleListNode";
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar_top">
<!--   -->
</a><a href="#skip-navbar_top" title="Skip navigation links"></a><a name="navbar_top_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DoubleListNode.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="index-all.html">Index</a></li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="IList.html" title="interface in &lt;Unnamed&gt;"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="index.html?DoubleListNode.html" target="_top">Frames</a></li>
<li><a href="DoubleListNode.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<!-- ======== START OF CLASS DATA ======== -->
<div class="header">
<h2 title="Class DoubleListNode" class="title">Class DoubleListNode&lt;E&gt;</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">java.lang.Object</a></li>
<li>
<ul class="inheritance">
<li>DoubleListNode&lt;E&gt;</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<hr>
<br>
<pre>public class <span class="strong">DoubleListNode&lt;E&gt;</span>
extends <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></pre>
<div class="block">A class that represents a node to be used in a linked list.
 These nodes are doubly linked.</div>
<dl><dt><span class="strong">Version:</span></dt>
  <dd>July 25, 2005</dd></dl>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Constructor Summary table, listing constructors, and an explanation">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colOne" scope="col">Constructor and Description</th>
</tr>
<tr class="altColor">
<td class="colOne"><code><strong><a href="#DoubleListNode()">DoubleListNode</a></strong>()</code>
<div class="block">default constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colOne"><code><strong><a href="#DoubleListNode(DoubleListNode, E, DoubleListNode)">DoubleListNode</a></strong>(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;prev,
              <a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&nbsp;data,
              <a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;next)</code>
<div class="block">create a DoubleListNode that holds the specified data
 and refers to the specified next and previous elements.</div>
</td>
</tr>
</table>
</li>
</ul>
<!-- ========== METHOD SUMMARY =========== -->
<ul class="blockList">
<li class="blockList"><a name="method_summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="overviewSummary" border="0" cellpadding="3" cellspacing="0" summary="Method Summary table, listing methods, and an explanation">
<caption><span>Methods</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a></code></td>
<td class="colLast"><code><strong><a href="#getData()">getData</a></strong>()</code>
<div class="block">return the data in this node.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code><a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="#getNext()">getNext</a></strong>()</code>
<div class="block">return the DoubleListNode this ListNode refers to.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;</code></td>
<td class="colLast"><code><strong><a href="#getPrev()">getPrev</a></strong>()</code>
<div class="block">return the DoubleListNode this DoubleListNode refers to.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="#setData(E)">setData</a></strong>(<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&nbsp;data)</code>
<div class="block">set the data in this node.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="#setNext(DoubleListNode)">setNext</a></strong>(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;next)</code>
<div class="block">set the next node this DoubleListNode refers to.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><code><strong><a href="#setPrev(DoubleListNode)">setPrev</a></strong>(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;prev)</code>
<div class="block">set the previous node this DoubleListNode refers to.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a name="methods_inherited_from_class_java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.<a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true" title="class or interface in java.lang">Object</a></h3>
<code><a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#equals(java.lang.Object)" title="class or interface in java.lang">equals</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#getClass()" title="class or interface in java.lang">getClass</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#hashCode()" title="class or interface in java.lang">hashCode</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notify()" title="class or interface in java.lang">notify</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#notifyAll()" title="class or interface in java.lang">notifyAll</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#toString()" title="class or interface in java.lang">toString</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait()" title="class or interface in java.lang">wait</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long)" title="class or interface in java.lang">wait</a>, <a href="http://java.sun.com/javase/6/docs/api/java/lang/Object.html?is-external=true#wait(long, int)" title="class or interface in java.lang">wait</a></code></li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<ul class="blockList">
<li class="blockList"><a name="constructor_detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a name="DoubleListNode()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>DoubleListNode</h4>
<pre>public&nbsp;DoubleListNode()</pre>
<div class="block">default constructor.
 <br>pre: none
 <br>post: getData() = null, getNext() = null, getPrev() = null
 <br>O(1)</div>
</li>
</ul>
<a name="DoubleListNode(DoubleListNode,java.lang.Object,DoubleListNode)">
<!--   -->
</a><a name="DoubleListNode(DoubleListNode, E, DoubleListNode)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>DoubleListNode</h4>
<pre>public&nbsp;DoubleListNode(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;prev,
              <a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&nbsp;data,
              <a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;next)</pre>
<div class="block">create a DoubleListNode that holds the specified data
 and refers to the specified next and previous elements.
 <br>pre: none
 <br>post: getData() = data, getNext() = next, getPrev() = prev
 <br>O(1)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>prev</code> - the previous node</dd><dd><code>data</code> - the  data this DoubleListNode should hold</dd><dd><code>next</code> - the next node</dd></dl>
</li>
</ul>
</li>
</ul>
<!-- ============ METHOD DETAIL ========== -->
<ul class="blockList">
<li class="blockList"><a name="method_detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a name="getData()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getData</h4>
<pre>public&nbsp;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&nbsp;getData()</pre>
<div class="block">return the data in this node.
 <br>pre: none
 <br>O(1)</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the data this DoubleListNode holds</dd></dl>
</li>
</ul>
<a name="getNext()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNext</h4>
<pre>public&nbsp;<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;getNext()</pre>
<div class="block">return the DoubleListNode this ListNode refers to.
 <br>pre: none
 <br>O(1)</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the DoubleListNode this DoubleListNode refers to (normally the next one in a list)</dd></dl>
</li>
</ul>
<a name="getPrev()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPrev</h4>
<pre>public&nbsp;<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;getPrev()</pre>
<div class="block">return the DoubleListNode this DoubleListNode refers to.
 <br>pre: none
 <br>O(1)</div>
<dl><dt><span class="strong">Returns:</span></dt><dd>the DoubleListNode this DoubleListNode refers to (normally the previous one in a list)</dd></dl>
</li>
</ul>
<a name="setData(java.lang.Object)">
<!--   -->
</a><a name="setData(E)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setData</h4>
<pre>public&nbsp;void&nbsp;setData(<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&nbsp;data)</pre>
<div class="block">set the data in this node.
 The old data is over written.
 <br>pre: none
 <br>post: getData() == data
 <br>O(1)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>data</code> - the new data for this DoubleListNode to hold</dd></dl>
</li>
</ul>
<a name="setNext(DoubleListNode)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setNext</h4>
<pre>public&nbsp;void&nbsp;setNext(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;next)</pre>
<div class="block">set the next node this DoubleListNode refers to.
 <br>pre: none
 <br>post: getNext() = next
 <br>O(1)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>next</code> - the next node this DoubleListNode should refer to</dd></dl>
</li>
</ul>
<a name="setPrev(DoubleListNode)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>setPrev</h4>
<pre>public&nbsp;void&nbsp;setPrev(<a href="DoubleListNode.html" title="class in &lt;Unnamed&gt;">DoubleListNode</a>&lt;<a href="DoubleListNode.html" title="type parameter in DoubleListNode">E</a>&gt;&nbsp;prev)</pre>
<div class="block">set the previous node this DoubleListNode refers to.
 <br>pre: none
 <br>post: getPrev() = next
 <br>O(1)</div>
<dl><dt><span class="strong">Parameters:</span></dt><dd><code>prev</code> - the previous node this DoubleListNode should refer to</dd></dl>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</div>
</div>
<!-- ========= END OF CLASS DATA ========= -->
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar_bottom">
<!--   -->
</a><a href="#skip-navbar_bottom" title="Skip navigation links"></a><a name="navbar_bottom_firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="class-use/DoubleListNode.html">Use</a></li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="index-all.html">Index</a></li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev Class</li>
<li><a href="IList.html" title="interface in &lt;Unnamed&gt;"><span class="strong">Next Class</span></a></li>
</ul>
<ul class="navList">
<li><a href="index.html?DoubleListNode.html" target="_top">Frames</a></li>
<li><a href="DoubleListNode.html" target="_top">No Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="allclasses-noframe.html">All Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor_detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method_detail">Method</a></li>
</ul>
</div>
<a name="skip-navbar_bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
